volumes:
  appdata:
  pgdata:

services:
  db:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  ti-monitoring-web:
    build:
      context: .
      args:
        TI_VERSION: ${TI_VERSION}
        TI_COMMIT: ${TI_COMMIT}
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./.env:/app/.env
      - appdata:/app/data
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
    healthcheck:
      test: ["CMD", "python", "scripts/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    ports:
      - "8050:8050"

  ti-monitoring-cron:
    build:
      context: .
      args:
        TI_VERSION: ${TI_VERSION}
        TI_COMMIT: ${TI_COMMIT}
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
    volumes:
      - ./config.yaml:/app/config.yaml
      - appdata:/app/data
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
    command: ["python", "-u", "cron.py"]
    restart: unless-stopped
    depends_on:
      - db
