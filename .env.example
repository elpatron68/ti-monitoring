# Encryption key for sensitive data (Apprise URLs, etc.)
# Generate a secure key with one of the following methods:
# - Python:  python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# - OpenSSL: openssl rand -base64 32 | tr '+/' '-_' | tr -d '='
ENCRYPTION_KEY=your_encryption_key_here

# SSL Configuration
# Set your domain name and email for Let's Encrypt SSL certificate
SSL_DOMAIN=ti-monitoring.example.com
SSL_DOMAIN_STATS=ti-stats.example.com
SSL_EMAIL=admin@example.com

# PostgreSQL / TimescaleDB
# Hinweis: Werte werden von docker-compose in DB und App (cron) injiziert
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_DB=timonitor
POSTGRES_USER=timonitor
POSTGRES_PASSWORD=timonitor

# Test-Benachrichtigungen
# URL für Test-Benachrichtigungen (CI-Ausfall-Simulation)
# Unterstützte Formate: mailtos://, discord://, slack://, telegram://, etc.
# Beispiel für E-Mail:
APPRISE_TEST_URL=mailtos://smtp.example.com?to=test@example.com&subject=TI-Monitoring Test&body=Test-Benachrichtigung
# Beispiel für Discord:
# APPRISE_TEST_URL=discord://webhook_id/webhook_token
# Beispiel für Slack:
# APPRISE_TEST_URL=slack://webhook_id/webhook_token

# Proxy Einstellungen (leer lassen, wenn keiner benötigt wird)
HTTP_PROXY=
HTTPS_PROXY=
